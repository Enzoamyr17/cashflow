generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String              @db.Uuid
  name              String
  color             String?
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  planned_amount    Decimal?            @default(0) @db.Decimal(10, 2)
  is_budgeted       Boolean?            @default(true)
  is_monthly        Boolean?            @default(false)
  users             users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transactions      transactions[]
  budget_categories budget_categories[]

  @@unique([user_id, name], map: "unique_category_per_user")
  @@index([user_id], map: "idx_categories_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transactions {
  id              String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String           @db.Uuid
  category_id     String?          @db.Uuid
  budget_frame_id String?          @db.Uuid
  type            transaction_type
  amount          Decimal          @db.Decimal(10, 2)
  method          payment_method
  notes           String?
  date            DateTime         @db.Date
  is_planned      Boolean          @default(false)
  is_completed    Boolean          @default(false)
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  categories      categories?      @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  users           users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  budget_frames   budget_frames?   @relation(fields: [budget_frame_id], references: [id], onDelete: SetNull, onUpdate: NoAction)

  @@index([category_id], map: "idx_transactions_category_id")
  @@index([budget_frame_id], map: "idx_transactions_budget_frame_id")
  @@index([date(sort: Desc)], map: "idx_transactions_date")
  @@index([is_completed], map: "idx_transactions_is_completed")
  @@index([is_planned], map: "idx_transactions_is_planned")
  @@index([type], map: "idx_transactions_type")
  @@index([user_id], map: "idx_transactions_user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                         String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_code                  String          @unique
  name                       String?
  email                      String?         @unique
  password_hash              String?
  email_verified             Boolean         @default(false)
  verification_code          String?
  verification_code_expires  DateTime?       @db.Timestamptz(6)
  created_at                 DateTime        @default(now()) @db.Timestamptz(6)
  starting_balance           Decimal         @default(0) @db.Decimal(12, 2)
  categories                 categories[]
  transactions               transactions[]
  budget_frames              budget_frames[]

  @@index([user_code], map: "idx_users_user_code")
  @@index([email], map: "idx_users_email")
}

enum payment_method {
  Cash
  Gcash
  Seabank
  UBP
  Other_Bank @map("Other Bank")
  Others
}

enum transaction_type {
  income
  expense
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model budget_frames {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String              @db.Uuid
  name              String
  start_date        DateTime            @db.Date
  end_date          DateTime            @db.Date
  starting_balance  Decimal             @default(0) @db.Decimal(12, 2)
  created_at        DateTime            @default(now()) @db.Timestamptz(6)
  users             users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  budget_categories budget_categories[]
  transactions      transactions[]

  @@index([user_id], map: "idx_budget_frames_user_id")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model budget_categories {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  budget_frame_id String        @db.Uuid
  category_id     String        @db.Uuid
  planned_amount  Decimal       @default(0) @db.Decimal(10, 2)
  is_monthly      Boolean       @default(false)
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  budget_frames   budget_frames @relation(fields: [budget_frame_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  categories      categories    @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([budget_frame_id, category_id], map: "unique_budget_category")
  @@index([budget_frame_id], map: "idx_budget_categories_budget_frame_id")
  @@index([category_id], map: "idx_budget_categories_category_id")
}
